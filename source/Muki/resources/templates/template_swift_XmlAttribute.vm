/**
 * Generated by Muki
 * This class has been automatically generated from a template. 
 * Do not change it manually. Instead, change the model and run the generation process again!
 */
import Foundation

class XmlAttribute: NSObject {
    
    var name: String
    // This is not called 'value' to avoid a conflict with value() method in NSObject (OSX)
    var data: String
    var typeId: Int

    override init() {
        self.name = ""
        self.data = ""
        self.typeId = -1
    }

    convenience init(name: String, value: String, typeId: Int) {
        self.init()
        self.name = name
        self.data = value
        self.typeId = typeId
    }
    
    convenience init(name: String, booleanValue: Bool) {
        if (booleanValue) {
            self.init(name: name, value: "true", typeId: 0)
        } else {
            self.init(name: name, value: "false", typeId: 0)
        }
    }
    
    convenience init(name: String, long: Int64) {
        self.init(name: name, value: long.description, typeId: 1)
    }
    
    convenience init(name: String, int: Int) {
        self.init(name: name, value: int.description, typeId: 2)
    }
    
    convenience init(name: String, double: Double) {
        self.init(name: name, value: double.description, typeId: 3)
    }
    
    func isBoolean() -> Bool {
        return self.typeId == 0
    }
    
    func isLong() -> Bool  {
        return self.typeId == 1
    }
    
    func isInt() -> Bool  {
        return self.typeId == 2
    }
    
    func isDouble() -> Bool  {
        return self.typeId == 3
    }
    
}
